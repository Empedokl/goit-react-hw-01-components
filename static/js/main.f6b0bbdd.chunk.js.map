{"version":3,"sources":["components/Profile/ProfileStyledComponent.js","components/Profile/Profile.js","components/Statistics/StatisticsStyledComponent.js","components/Statistics/Statistics.js","components/FriendList/FriendListStyledComponent.js","components/FriendListItem/FriendListItemStyledComponent.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryStyledComponent.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["Container","styled","div","Description","Image","img","Name","p","List","ul","Item","li","ListLabel","span","ListQuantity","Profile","user","name","avatar","tag","location","stats","followers","likes","views","src","alt","Title","h2","ListItem","Label","Statistics","title","map","id","label","percentage","style","backgroundColor","randomRGB","randomNum","Math","floor","random","red","green","blue","defaultProps","Condition","props","isOnline","FriendListItem","width","FriendList","friends","Table","table","TableHeadline","thead","TableRow","tr","TableHead","th","TableCell","td","TransactionHistory","items","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"6jGAEaA,EAAYC,IAAOC,IAAV,8PAWTC,EAAcF,IAAOC,IAAV,8CAGXE,EAAQH,IAAOI,IAAV,6IASLC,EAAOL,IAAOM,EAAV,iDAIJC,EAAOP,IAAOQ,GAAV,6LAUJC,EAAOT,IAAOU,GAAV,uKAUJC,EAAYX,IAAOY,KAAV,kHAMTC,EAAeb,IAAOY,KAAV,wF,OCNVE,EA5CC,SAAAC,GAAS,IACfC,EAAgCD,EAAhCC,KAAMC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,IAAKC,EAAaJ,EAAbI,SADL,EAEcJ,EAAKK,MAAjCC,EAFc,EAEdA,UAAWC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,MAC1B,OACE,eAACxB,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,CAAOqB,IAAKP,EAAQQ,IAAKT,IACzB,cAACX,EAAD,UAAOW,IACP,kCAAKE,KACL,4BAAIC,OAGN,eAACZ,EAAD,WACE,eAACE,EAAD,WACE,cAACE,EAAD,wBACA,cAACE,EAAD,UAAeQ,OAEjB,eAACZ,EAAD,WACE,cAACE,EAAD,oBACA,cAACE,EAAD,UAAeU,OAEjB,eAACd,EAAD,WACE,cAACE,EAAD,oBACA,cAACE,EAAD,UAAeS,cC1BZvB,EAAYC,IAAOC,IAAV,mLAOTyB,EAAQ1B,IAAO2B,GAAV,mKAQLpB,EAAOP,IAAOQ,GAAV,wKAUJoB,EAAW5B,IAAOU,GAAV,4CAIRmB,EAAQ7B,IAAOY,KAAV,mIC1BZkB,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOX,EAAY,EAAZA,MAC3B,OACE,eAAC,EAAD,WACGW,GAAS,cAACL,EAAD,UAAQK,IAClB,cAAC,EAAD,UACGX,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAAd,OACT,eAACP,EAAD,CAEEQ,MAAO,CACLC,gBAAiBC,KAHrB,UAME,cAACT,EAAD,UAAQK,IACR,eAACL,EAAD,WAAQM,EAAR,SANKF,YA8BjB,SAASM,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGzB,SAASJ,IACP,IAAIK,EAAMJ,IACNK,EAAQL,IACRM,EAAON,IACX,MAAM,OAAN,OAAcI,EAAd,YAAqBC,EAArB,YAA8BC,EAA9B,KAxBFf,EAAWgB,aAAe,CACxBf,MAAO,IA0BMD,I,oBAAAA,ICnDFvB,EAAOP,IAAOQ,GAAV,mFCAJC,EAAOT,IAAOU,GAAV,gTAeJqC,EAAY/C,IAAOY,KAAV,oJAMA,SAAAoC,GAAK,OAAKA,EAAMC,SAAW,QAAU,SAG9C9C,EAAQH,IAAOI,IAAV,0EAKLC,EAAOL,IAAOM,EAAV,qECjBF4C,GAVQ,SAAC,GAAgC,IAA9BjC,EAA6B,EAA7BA,OAAQD,EAAqB,EAArBA,KAAMiC,EAAe,EAAfA,SACtC,OACE,eAAC,EAAD,WACE,cAACF,EAAD,CAAWE,SAAUA,IACrB,cAAC,EAAD,CAAOzB,IAAKP,EAAQQ,IAAKT,EAAMmC,MAAM,OACrC,cAAC,EAAD,UAAOnC,QCsBEoC,GA1BI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,cAAC,EAAD,UACGA,EAAQrB,KAAI,gBAAGC,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,OAAQD,EAAf,EAAeA,KAAMiC,EAArB,EAAqBA,SAArB,OACX,cAAC,GAAD,CAEEhC,OAAQA,EACRD,KAAMA,EACNiC,SAAUA,GAHLhB,S,SCRFqB,GAAQtD,IAAOuD,MAAV,4FAMLC,GAAgBxD,IAAOyD,MAAV,8FAKbC,GAAW1D,IAAO2D,GAAV,yHAORC,GAAY5D,IAAO6D,GAAV,oIAQTC,GAAY9D,IAAO+D,GAAV,gKCWPC,GAnCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,eAACX,GAAD,WACE,cAACE,GAAD,UACE,eAACE,GAAD,WACE,cAACE,GAAD,mBACA,cAACA,GAAD,qBACA,cAACA,GAAD,4BAIJ,gCACGK,EAAMjC,KAAI,gBAAGC,EAAH,EAAGA,GAAIiC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,eAACV,GAAD,WACE,cAACI,GAAD,UAAYI,IACZ,cAACJ,GAAD,UAAYK,IACZ,cAACL,GAAD,UAAYM,MAHCnC,Y,0BCgBVoC,GAnBH,WACV,OACE,qCACE,cAAC,EAAD,CACErD,KAAMD,GAAKC,KACXE,IAAKH,GAAKG,IACVC,SAAUJ,GAAKI,SACfF,OAAQF,GAAKE,OACbG,MAAOL,GAAKK,QAGd,cAAC,EAAD,CAAYW,MAAM,eAAeX,MAAOkD,KAExC,cAAC,GAAD,CAAYjB,QAASA,KAErB,cAAC,GAAD,CAAoBY,MAAOM,SCxBjCC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.f6b0bbdd.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  color: #24292e;\r\n  background-color: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\r\n  max-width: 250px;\r\n  margin: 0 auto 20px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  padding: 30px;\r\n`;\r\nexport const Image = styled.img`\r\n  margin: 0 auto;\r\n  border-radius: 50%;\r\n  height: auto;\r\n  display: block;\r\n  width: 56%;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #eee;\r\n  border-top: 1px solid grey;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  padding: 15px 0;\r\n  flex-basis: auto;\r\n  width: 33.333%;\r\n  cursor: pointer;\r\n  &:not(:last-child) {\r\n    border-right: 1px solid;\r\n  }\r\n`;\r\n\r\nexport const ListLabel = styled.span`\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  display: block;\r\n  font-size: 12px;\r\n`;\r\nexport const ListQuantity = styled.span`\r\n  display: block;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n`;","import React from 'react';\r\nimport PropTypes, { string, number } from 'prop-types';\r\nimport {Container, Description, Image, Name, List, Item, ListLabel, ListQuantity} from './ProfileStyledComponent'\r\n\r\n\r\nconst Profile = user => {\r\n  const { name, avatar, tag, location } = user;\r\n  const { followers, likes, views } = user.stats;\r\n  return (\r\n    <Container>\r\n      <Description>\r\n        <Image src={avatar} alt={name} />\r\n        <Name>{name}</Name>\r\n        <p>@{tag}</p>\r\n        <p>{location}</p>\r\n      </Description>\r\n\r\n      <List>\r\n        <Item>\r\n          <ListLabel>Followers</ListLabel>\r\n          <ListQuantity>{followers}</ListQuantity>\r\n        </Item>\r\n        <Item>\r\n          <ListLabel>Views</ListLabel>\r\n          <ListQuantity>{views}</ListQuantity>\r\n        </Item>\r\n        <Item>\r\n          <ListLabel>Likes</ListLabel>\r\n          <ListQuantity>{likes}</ListQuantity>\r\n        </Item>\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.exact({\r\n    name: string.isRequired,\r\n    tag: string.isRequired,\r\n    location: string,\r\n    avatar: string,\r\n    stats: PropTypes.exact({\r\n      followers: number.isRequired,\r\n      views: number.isRequired,\r\n      likes: number.isRequired,\r\n    }).isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  margin: 0 auto;\r\n  padding: 50px;\r\n  max-width: 300px;\r\n  background-color: rgba(200, 200, 200, 0.5);\r\n`;\r\nexport const Title = styled.h2`\r\n  margin: 0;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 20px;\r\n  padding: 20px 0;\r\n  background-color: white;\r\n`;\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  width: 60px;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  /* margin: 0 auto; */\r\n  text-align: center;\r\n  display: block;\r\n  padding: 5px 0;\r\n  color: white;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Container, Title,  List, ListItem, Label} from './StatisticsStyledComponent.js'\r\n\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <Container>\r\n      {title && <Title>{title}</Title>}\r\n      <List>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <ListItem\r\n            key={id}\r\n            style={{\r\n              backgroundColor: randomRGB(),\r\n            }}\r\n          >\r\n            <Label>{label}</Label>\r\n            <Label>{percentage}%</Label>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nfunction randomNum() {\r\n  return Math.floor(Math.random() * 256);\r\n}\r\n\r\nfunction randomRGB() {\r\n  var red = randomNum();\r\n  var green = randomNum();\r\n  var blue = randomNum();\r\n  return `rgb(${red},${green},${blue})`;\r\n}\r\n\r\nexport default Statistics;","  import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  margin: 0;\r\n  padding: 20px 0;\r\n  list-style: none;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 400px;\r\n  height: 100px;\r\n  list-style: none;\r\n  box-shadow: 0 0 10px 5px rgba(221, 221, 221, 1);\r\n  &:not(:last-child) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const Condition = styled.span`\r\n  margin: 0 20px;\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${props => (props.isOnline ? 'green' : 'red')};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  margin-right: 15px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n`;","import React from 'react';\r\nimport {Item, Condition, Image, Name} from './FriendListItemStyledComponent'\r\n\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <Item>\r\n      <Condition isOnline={isOnline}></Condition>\r\n      <Image src={avatar} alt={name} width=\"80\" />\r\n      <Name>{name}</Name>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {List} from './FriendListStyledComponent'\r\nimport FriendListItem from '../FriendListItem';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <List>\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <FriendListItem\r\n          key={id}\r\n          avatar={avatar}\r\n          name={name}\r\n          isOnline={isOnline}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;","import styled from 'styled-components';\r\n\r\nexport const Table = styled.table`\r\n  display: table;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const TableHeadline = styled.thead`\r\n  background-color: palevioletred;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const TableRow = styled.tr`\r\n  :nth-child(odd) {\r\n    /* outline: 1px solid red; */\r\n    background-color: #e2eded;\r\n  }\r\n`;\r\n\r\nexport const TableHead = styled.th`\r\n  padding: 10px;\r\n  height: 20px;\r\n  text-align: center;\r\n  color: #fff;\r\n  background-color: #31cfd9;\r\n`;\r\n\r\nexport const TableCell = styled.td`\r\n  padding: 10px;\r\n  height: 20px;\r\n  text-align: center;\r\n  min-width: 200px;\r\n  color: #696969;\r\n  border-bottom: 1px solid #eee;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Table, TableHeadline, TableRow, TableHead, TableCell} from './TransactionHistoryStyledComponent'\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <Table>\r\n      <TableHeadline>\r\n        <TableRow>\r\n          <TableHead>Type</TableHead>\r\n          <TableHead>Amount</TableHead>\r\n          <TableHead>Currency</TableHead>\r\n        </TableRow>\r\n      </TableHeadline>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <TableRow key={id}>\r\n            <TableCell>{type}</TableCell>\r\n            <TableCell>{amount}</TableCell>\r\n            <TableCell>{currency}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;","import React from 'react';\n\nimport Profile from './Profile';\nimport Statistics from './Statistics';\nimport FriendList from './FriendList';\n\nimport transactions from '../datajson/transactions.json';\n\nimport TransactionHistory from './TransactionHistory';\n\nimport user from '../datajson/user.json';\nimport statisticalData from '../datajson/statistical-data.json';\nimport friends from '../datajson/friends.json';\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}